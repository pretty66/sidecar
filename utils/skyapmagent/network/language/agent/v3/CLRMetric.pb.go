// Code generated by protoc-gen-go. DO NOT EDIT.
// source: language-agent/CLRMetric.proto

package v3

import (
	context "context"
	fmt "fmt"
	v3 "github.com/openmsp/sidecar/utils/skyapmagent/network/common/v3"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = proto.Marshal
	_ = fmt.Errorf
	_ = math.Inf
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CLRMetricCollection struct {
	Metrics              []*CLRMetric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	Service              string       `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	ServiceInstance      string       `protobuf:"bytes,3,opt,name=serviceInstance,proto3" json:"serviceInstance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CLRMetricCollection) Reset()         { *m = CLRMetricCollection{} }
func (m *CLRMetricCollection) String() string { return proto.CompactTextString(m) }
func (*CLRMetricCollection) ProtoMessage()    {}
func (*CLRMetricCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_15da166ca416e940, []int{0}
}

func (m *CLRMetricCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLRMetricCollection.Unmarshal(m, b)
}

func (m *CLRMetricCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLRMetricCollection.Marshal(b, m, deterministic)
}

func (m *CLRMetricCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLRMetricCollection.Merge(m, src)
}

func (m *CLRMetricCollection) XXX_Size() int {
	return xxx_messageInfo_CLRMetricCollection.Size(m)
}

func (m *CLRMetricCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_CLRMetricCollection.DiscardUnknown(m)
}

var xxx_messageInfo_CLRMetricCollection proto.InternalMessageInfo

func (m *CLRMetricCollection) GetMetrics() []*CLRMetric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *CLRMetricCollection) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *CLRMetricCollection) GetServiceInstance() string {
	if m != nil {
		return m.ServiceInstance
	}
	return ""
}

type CLRMetric struct {
	Time                 int64      `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Cpu                  *v3.CPU    `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Gc                   *ClrGC     `protobuf:"bytes,3,opt,name=gc,proto3" json:"gc,omitempty"`
	Thread               *ClrThread `protobuf:"bytes,4,opt,name=thread,proto3" json:"thread,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CLRMetric) Reset()         { *m = CLRMetric{} }
func (m *CLRMetric) String() string { return proto.CompactTextString(m) }
func (*CLRMetric) ProtoMessage()    {}
func (*CLRMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_15da166ca416e940, []int{1}
}

func (m *CLRMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLRMetric.Unmarshal(m, b)
}

func (m *CLRMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLRMetric.Marshal(b, m, deterministic)
}

func (m *CLRMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLRMetric.Merge(m, src)
}

func (m *CLRMetric) XXX_Size() int {
	return xxx_messageInfo_CLRMetric.Size(m)
}

func (m *CLRMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_CLRMetric.DiscardUnknown(m)
}

var xxx_messageInfo_CLRMetric proto.InternalMessageInfo

func (m *CLRMetric) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *CLRMetric) GetCpu() *v3.CPU {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *CLRMetric) GetGc() *ClrGC {
	if m != nil {
		return m.Gc
	}
	return nil
}

func (m *CLRMetric) GetThread() *ClrThread {
	if m != nil {
		return m.Thread
	}
	return nil
}

type ClrGC struct {
	Gen0CollectCount     int64    `protobuf:"varint,1,opt,name=Gen0CollectCount,proto3" json:"Gen0CollectCount,omitempty"`
	Gen1CollectCount     int64    `protobuf:"varint,2,opt,name=Gen1CollectCount,proto3" json:"Gen1CollectCount,omitempty"`
	Gen2CollectCount     int64    `protobuf:"varint,3,opt,name=Gen2CollectCount,proto3" json:"Gen2CollectCount,omitempty"`
	HeapMemory           int64    `protobuf:"varint,4,opt,name=HeapMemory,proto3" json:"HeapMemory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClrGC) Reset()         { *m = ClrGC{} }
func (m *ClrGC) String() string { return proto.CompactTextString(m) }
func (*ClrGC) ProtoMessage()    {}
func (*ClrGC) Descriptor() ([]byte, []int) {
	return fileDescriptor_15da166ca416e940, []int{2}
}

func (m *ClrGC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClrGC.Unmarshal(m, b)
}

func (m *ClrGC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClrGC.Marshal(b, m, deterministic)
}

func (m *ClrGC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClrGC.Merge(m, src)
}

func (m *ClrGC) XXX_Size() int {
	return xxx_messageInfo_ClrGC.Size(m)
}

func (m *ClrGC) XXX_DiscardUnknown() {
	xxx_messageInfo_ClrGC.DiscardUnknown(m)
}

var xxx_messageInfo_ClrGC proto.InternalMessageInfo

func (m *ClrGC) GetGen0CollectCount() int64 {
	if m != nil {
		return m.Gen0CollectCount
	}
	return 0
}

func (m *ClrGC) GetGen1CollectCount() int64 {
	if m != nil {
		return m.Gen1CollectCount
	}
	return 0
}

func (m *ClrGC) GetGen2CollectCount() int64 {
	if m != nil {
		return m.Gen2CollectCount
	}
	return 0
}

func (m *ClrGC) GetHeapMemory() int64 {
	if m != nil {
		return m.HeapMemory
	}
	return 0
}

type ClrThread struct {
	AvailableCompletionPortThreads int32    `protobuf:"varint,1,opt,name=AvailableCompletionPortThreads,proto3" json:"AvailableCompletionPortThreads,omitempty"`
	AvailableWorkerThreads         int32    `protobuf:"varint,2,opt,name=AvailableWorkerThreads,proto3" json:"AvailableWorkerThreads,omitempty"`
	MaxCompletionPortThreads       int32    `protobuf:"varint,3,opt,name=MaxCompletionPortThreads,proto3" json:"MaxCompletionPortThreads,omitempty"`
	MaxWorkerThreads               int32    `protobuf:"varint,4,opt,name=MaxWorkerThreads,proto3" json:"MaxWorkerThreads,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *ClrThread) Reset()         { *m = ClrThread{} }
func (m *ClrThread) String() string { return proto.CompactTextString(m) }
func (*ClrThread) ProtoMessage()    {}
func (*ClrThread) Descriptor() ([]byte, []int) {
	return fileDescriptor_15da166ca416e940, []int{3}
}

func (m *ClrThread) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClrThread.Unmarshal(m, b)
}

func (m *ClrThread) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClrThread.Marshal(b, m, deterministic)
}

func (m *ClrThread) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClrThread.Merge(m, src)
}

func (m *ClrThread) XXX_Size() int {
	return xxx_messageInfo_ClrThread.Size(m)
}

func (m *ClrThread) XXX_DiscardUnknown() {
	xxx_messageInfo_ClrThread.DiscardUnknown(m)
}

var xxx_messageInfo_ClrThread proto.InternalMessageInfo

func (m *ClrThread) GetAvailableCompletionPortThreads() int32 {
	if m != nil {
		return m.AvailableCompletionPortThreads
	}
	return 0
}

func (m *ClrThread) GetAvailableWorkerThreads() int32 {
	if m != nil {
		return m.AvailableWorkerThreads
	}
	return 0
}

func (m *ClrThread) GetMaxCompletionPortThreads() int32 {
	if m != nil {
		return m.MaxCompletionPortThreads
	}
	return 0
}

func (m *ClrThread) GetMaxWorkerThreads() int32 {
	if m != nil {
		return m.MaxWorkerThreads
	}
	return 0
}

func init() {
	proto.RegisterType((*CLRMetricCollection)(nil), "CLRMetricCollection")
	proto.RegisterType((*CLRMetric)(nil), "CLRMetric")
	proto.RegisterType((*ClrGC)(nil), "ClrGC")
	proto.RegisterType((*ClrThread)(nil), "ClrThread")
}

func init() { proto.RegisterFile("language-agent/CLRMetric.proto", fileDescriptor_15da166ca416e940) }

var fileDescriptor_15da166ca416e940 = []byte{
	// 474 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xb1, 0x9d, 0x26, 0xca, 0xe4, 0x00, 0xda, 0xa2, 0xc8, 0xca, 0x21, 0x8a, 0xac, 0x1e,
	0x22, 0x04, 0x1b, 0xea, 0x48, 0x1c, 0xb8, 0x81, 0xa5, 0x16, 0x24, 0x82, 0x22, 0x17, 0x54, 0x89,
	0xdb, 0x76, 0x3b, 0x72, 0x2d, 0xaf, 0x77, 0xad, 0xf5, 0x26, 0x6d, 0xb8, 0xf0, 0x3e, 0xf0, 0x78,
	0xbc, 0x00, 0xf2, 0xfa, 0xa3, 0x84, 0xa6, 0xe2, 0xe4, 0xf5, 0xff, 0xff, 0x9b, 0x99, 0xfd, 0x98,
	0x81, 0xa9, 0x60, 0x32, 0xd9, 0xb0, 0x04, 0x5f, 0xb1, 0x04, 0xa5, 0x59, 0x44, 0x9f, 0xe2, 0x15,
	0x1a, 0x9d, 0x72, 0x5a, 0x68, 0x65, 0xd4, 0xe4, 0x98, 0xab, 0x3c, 0x57, 0x72, 0x11, 0xd9, 0x4f,
	0x2d, 0x06, 0x3f, 0xe0, 0xb8, 0xe3, 0x22, 0x25, 0x04, 0x72, 0x93, 0x2a, 0x49, 0x4e, 0x60, 0x90,
	0x5b, 0xad, 0xf4, 0x9d, 0x99, 0x37, 0x1f, 0x85, 0x40, 0x3b, 0x2c, 0x6e, 0x2d, 0xe2, 0xc3, 0xa0,
	0x44, 0xbd, 0x4d, 0x39, 0xfa, 0xee, 0xcc, 0x99, 0x0f, 0xe3, 0xf6, 0x97, 0xcc, 0xe1, 0x69, 0xb3,
	0xfc, 0x28, 0x4b, 0xc3, 0x24, 0x47, 0xdf, 0xb3, 0xc4, 0xbf, 0x72, 0x50, 0xc2, 0xb0, 0xcb, 0x4c,
	0x08, 0xf4, 0x4c, 0x9a, 0xa3, 0xef, 0xcc, 0x9c, 0xb9, 0x17, 0xdb, 0x35, 0x19, 0x83, 0xc7, 0x8b,
	0x8d, 0x2d, 0x30, 0x0a, 0x7b, 0x34, 0x5a, 0x7f, 0x8d, 0x2b, 0x81, 0x8c, 0xc1, 0x4d, 0xb8, 0xcd,
	0x3a, 0x0a, 0xfb, 0x34, 0x12, 0xfa, 0x3c, 0x8a, 0xdd, 0x84, 0x93, 0x00, 0xfa, 0xe6, 0x46, 0x23,
	0xbb, 0xf6, 0x7b, 0xd6, 0x83, 0xca, 0xfb, 0x62, 0x95, 0xb8, 0x71, 0x82, 0x5f, 0x0e, 0x1c, 0xd9,
	0x08, 0xf2, 0x02, 0x9e, 0x9d, 0xa3, 0x7c, 0xdd, 0x1c, 0x3d, 0x52, 0x1b, 0x69, 0x9a, 0xea, 0x0f,
	0xf4, 0x86, 0x3d, 0xdd, 0x63, 0xdd, 0x8e, 0x3d, 0x3d, 0xc0, 0x86, 0x7b, 0xac, 0xd7, 0xb1, 0x7b,
	0x3a, 0x99, 0x02, 0x7c, 0x40, 0x56, 0xac, 0x30, 0x57, 0x7a, 0x67, 0x77, 0xed, 0xc5, 0x7f, 0x29,
	0xc1, 0x6f, 0x07, 0x86, 0xdd, 0x19, 0xc8, 0x19, 0x4c, 0xdf, 0x6d, 0x59, 0x2a, 0xd8, 0x95, 0xc0,
	0x48, 0xe5, 0x85, 0xc0, 0xea, 0xc5, 0xd6, 0x4a, 0x9b, 0x1a, 0x28, 0xed, 0xfe, 0x8f, 0xe2, 0xff,
	0x50, 0xe4, 0x0d, 0x8c, 0x3b, 0xe2, 0x52, 0xe9, 0x0c, 0x75, 0x1b, 0xef, 0xda, 0xf8, 0x47, 0x5c,
	0xf2, 0x16, 0xfc, 0x15, 0xbb, 0x3b, 0x5c, 0xd9, 0xb3, 0x91, 0x8f, 0xfa, 0xd5, 0xad, 0xac, 0xd8,
	0xdd, 0x7e, 0xb5, 0x9e, 0x8d, 0x79, 0xa0, 0x87, 0x67, 0x30, 0xbe, 0x6f, 0x39, 0x2c, 0x94, 0x36,
	0x17, 0x4d, 0x73, 0xbd, 0x84, 0x01, 0xaf, 0xef, 0x8f, 0x3c, 0xa7, 0x07, 0xba, 0x77, 0x32, 0xa4,
	0x55, 0x8f, 0x33, 0x79, 0x5d, 0x06, 0x4f, 0xde, 0x7f, 0x87, 0xa5, 0xd2, 0x09, 0x65, 0x05, 0xe3,
	0x37, 0x48, 0xcb, 0x6c, 0x77, 0xcb, 0x44, 0x96, 0xca, 0x4a, 0xc9, 0xa9, 0x44, 0x73, 0xab, 0x74,
	0x46, 0xdb, 0xd1, 0xa1, 0x76, 0x74, 0xe8, 0x76, 0xb9, 0x76, 0xbe, 0x9d, 0xdc, 0xb3, 0x8b, 0x86,
	0x5b, 0xb4, 0xdc, 0xa2, 0x1e, 0xb1, 0xed, 0xf2, 0xa7, 0x3b, 0xb9, 0xc8, 0x76, 0x97, 0x4d, 0xca,
	0xcf, 0x35, 0xb6, 0xae, 0x46, 0x8b, 0x2b, 0x71, 0xd5, 0xb7, 0x43, 0xb6, 0xfc, 0x13, 0x00, 0x00,
	0xff, 0xff, 0x1b, 0xc1, 0x4d, 0xb1, 0x9b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ context.Context
	_ grpc.ClientConn
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CLRMetricReportServiceClient is the client API for CLRMetricReportService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CLRMetricReportServiceClient interface {
	Collect(ctx context.Context, in *CLRMetricCollection, opts ...grpc.CallOption) (*v3.Commands, error)
}

type cLRMetricReportServiceClient struct {
	cc *grpc.ClientConn
}

func NewCLRMetricReportServiceClient(cc *grpc.ClientConn) CLRMetricReportServiceClient {
	return &cLRMetricReportServiceClient{cc}
}

func (c *cLRMetricReportServiceClient) Collect(ctx context.Context, in *CLRMetricCollection, opts ...grpc.CallOption) (*v3.Commands, error) {
	out := new(v3.Commands)
	err := c.cc.Invoke(ctx, "/CLRMetricReportService/collect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CLRMetricReportServiceServer is the server API for CLRMetricReportService service.
type CLRMetricReportServiceServer interface {
	Collect(context.Context, *CLRMetricCollection) (*v3.Commands, error)
}

// UnimplementedCLRMetricReportServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCLRMetricReportServiceServer struct{}

func (*UnimplementedCLRMetricReportServiceServer) Collect(ctx context.Context, req *CLRMetricCollection) (*v3.Commands, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Collect not implemented")
}

func RegisterCLRMetricReportServiceServer(s *grpc.Server, srv CLRMetricReportServiceServer) {
	s.RegisterService(&_CLRMetricReportService_serviceDesc, srv)
}

func _CLRMetricReportService_Collect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CLRMetricCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CLRMetricReportServiceServer).Collect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CLRMetricReportService/Collect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CLRMetricReportServiceServer).Collect(ctx, req.(*CLRMetricCollection))
	}
	return interceptor(ctx, in, info, handler)
}

var _CLRMetricReportService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CLRMetricReportService",
	HandlerType: (*CLRMetricReportServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "collect",
			Handler:    _CLRMetricReportService_Collect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "language-agent/CLRMetric.proto",
}
